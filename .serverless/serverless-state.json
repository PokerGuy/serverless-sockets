{
  "service": {
    "service": "chatroom",
    "serviceObject": {
      "name": "chatroom"
    },
    "provider": {
      "stage": "dev",
      "region": "us-west-2",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "stackName": "chatroom-dev",
      "memorySize": 128,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "execute-api:ManageConnections"
          ],
          "Resource": [
            "arn:aws:execute-api:*:*:**/@connections/*"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:Query",
            "dynamodb:Scan"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "ChatConnectionsTable",
                "Arn"
              ]
            },
            {
              "Fn::Join": [
                "/",
                [
                  {
                    "Fn::GetAtt": [
                      "ChatConnectionsTable",
                      "Arn"
                    ]
                  },
                  "*"
                ]
              ]
            }
          ]
        }
      ],
      "environment": {
        "CHATCONNECTION_TABLE": {
          "Ref": "ChatConnectionsTable"
        }
      },
      "websocketApiName": "websocket-chat-dev",
      "websocketApiRouteSelectionExpression": "$request.body.action",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ConnectionManagerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chatroom-dev-connectionManager"
            }
          },
          "DefaultMessagesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chatroom-dev-defaultMessages"
            }
          },
          "SendMessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chatroom-dev-sendMessage"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "chatroom",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chatroom-dev-connectionManager:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chatroom-dev-defaultMessages:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chatroom-dev-sendMessage:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chatroom-dev-connectionManager:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chatroom-dev-defaultMessages:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chatroom-dev-sendMessage:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:ManageConnections"
                        ],
                        "Resource": [
                          "arn:aws:execute-api:*:*:*/@connections/*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "chatroom",
                    "dev",
                    "us-west-2",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ConnectionManagerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chatroom/dev/1553534628236-2019-03-25T17:23:48.236Z/chatroom.zip"
              },
              "FunctionName": "chatroom-dev-connectionManager",
              "Handler": "handler.connectionManager",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CHATCONNECTION_TABLE": {
                    "Ref": "ChatConnectionsTable"
                  }
                }
              }
            },
            "DependsOn": [
              "ConnectionManagerLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ConnectionManagerLambdaVersionIGSUqtmBLT46tYDl7aHwTq0ApGwrNSNnkUtk3RX1UI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ConnectionManagerLambdaFunction"
              },
              "CodeSha256": "oaANX+maK5nuRVUFkZF5kA6RXvXVd9nzTV5flUD9ayo="
            }
          },
          "DefaultMessagesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chatroom/dev/1553534628236-2019-03-25T17:23:48.236Z/chatroom.zip"
              },
              "FunctionName": "chatroom-dev-defaultMessages",
              "Handler": "handler.defaultMessage",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CHATCONNECTION_TABLE": {
                    "Ref": "ChatConnectionsTable"
                  }
                }
              }
            },
            "DependsOn": [
              "DefaultMessagesLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DefaultMessagesLambdaVersionEC8cAbDPLV2RvDE7KezRrXrZzDAai7ixyJQr5fLAasE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DefaultMessagesLambdaFunction"
              },
              "CodeSha256": "oaANX+maK5nuRVUFkZF5kA6RXvXVd9nzTV5flUD9ayo="
            }
          },
          "SendMessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chatroom/dev/1553534628236-2019-03-25T17:23:48.236Z/chatroom.zip"
              },
              "FunctionName": "chatroom-dev-sendMessage",
              "Handler": "handler.sendMessage",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CHATCONNECTION_TABLE": {
                    "Ref": "ChatConnectionsTable"
                  }
                }
              }
            },
            "DependsOn": [
              "SendMessageLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SendMessageLambdaVersion1boCcQmP6QrMypO8ViwEdh9M5r6Vhgw9Q1JZhTo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendMessageLambdaFunction"
              },
              "CodeSha256": "oaANX+maK5nuRVUFkZF5kA6RXvXVd9nzTV5flUD9ayo="
            }
          },
          "WebsocketsApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-chatroom-websockets",
              "RouteSelectionExpression": "$request.body.action",
              "Description": "Serverless Websockets",
              "ProtocolType": "WEBSOCKET"
            }
          },
          "ConnectionManagerWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ConnectionManagerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "DefaultMessagesWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DefaultMessagesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "SendMessageWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "SendMessageLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "ConnectionManagerLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "ConnectionManagerLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ConnectionManagerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              }
            }
          },
          "DefaultMessagesLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "DefaultMessagesLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DefaultMessagesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              }
            }
          },
          "SendMessageLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "SendMessageLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SendMessageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              }
            }
          },
          "SconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$connect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "ConnectionManagerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdisconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$disconnect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "ConnectionManagerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdefaultWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$default",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "DefaultMessagesWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "sendMessageWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "sendMessage",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "SendMessageWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "WebsocketsDeployment1553534628387": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
              "SconnectWebsocketsRoute",
              "SdisconnectWebsocketsRoute",
              "SdefaultWebsocketsRoute",
              "sendMessageWebsocketsRoute"
            ],
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "Description": "Serverless Websockets"
            }
          },
          "WebsocketsDeploymentStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "DeploymentId": {
                "Ref": "WebsocketsDeployment1553534628387"
              },
              "StageName": "dev",
              "Description": "Serverless Websockets"
            }
          },
          "ChatConnectionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "chatUsers",
              "AttributeDefinitions": [
                {
                  "AttributeName": "connectionId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "connectionId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ConnectionManagerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ConnectionManagerLambdaVersionIGSUqtmBLT46tYDl7aHwTq0ApGwrNSNnkUtk3RX1UI"
            }
          },
          "DefaultMessagesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DefaultMessagesLambdaVersionEC8cAbDPLV2RvDE7KezRrXrZzDAai7ixyJQr5fLAasE"
            }
          },
          "SendMessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendMessageLambdaVersion1boCcQmP6QrMypO8ViwEdh9M5r6Vhgw9Q1JZhTo"
            }
          },
          "ServiceEndpointWebsocket": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "WebsocketsApi"
                  },
                  ".execute-api.us-west-2.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "ChatConnectionsTableArn": {
            "Value": {
              "Fn::GetAtt": [
                "ChatConnectionsTable",
                "Arn"
              ]
            },
            "Export": {
              "Name": "chatroom:ChatConnectionsTableArn"
            }
          },
          "EndpointWebsocket": {
            "Value": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "WebsocketsApi"
                  },
                  ".execute-api.us-west-2.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "WSConnection"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "connectionManager": {
        "handler": "handler.connectionManager",
        "events": [
          {
            "websocket": {
              "route": "$connect"
            }
          },
          {
            "websocket": {
              "route": "$disconnect"
            }
          }
        ],
        "name": "chatroom-dev-connectionManager",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "defaultMessages": {
        "handler": "handler.defaultMessage",
        "events": [
          {
            "websocket": {
              "route": "$default"
            }
          }
        ],
        "name": "chatroom-dev-defaultMessages",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "sendMessage": {
        "handler": "handler.sendMessage",
        "events": [
          {
            "websocket": {
              "route": "sendMessage"
            }
          }
        ],
        "name": "chatroom-dev-sendMessage",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "ChatConnectionsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "chatUsers",
            "AttributeDefinitions": [
              {
                "AttributeName": "connectionId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "connectionId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {
        "ChatConnectionsTableArn": {
          "Value": {
            "Fn::GetAtt": [
              "ChatConnectionsTable",
              "Arn"
            ]
          },
          "Export": {
            "Name": "chatroom:ChatConnectionsTableArn"
          }
        },
        "EndpointWebsocket": {
          "Value": {
            "Fn::Join": [
              "",
              [
                "wss://",
                {
                  "Ref": "WebsocketsApi"
                },
                ".execute-api.us-west-2.",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "WSConnection"
          }
        }
      }
    },
    "layers": {},
    "artifact": "/Users/evan.zlotnick/wss/.serverless/chatroom.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/chatroom/dev/1553534628236-2019-03-25T17:23:48.236Z",
    "artifact": "chatroom.zip"
  }
}